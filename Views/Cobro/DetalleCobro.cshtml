@model G03_Sistema_Condominios.Models.ModelCobroView


@{
    ViewBag.Title = "DetalleCobro";
}


<style>

    .ui-dialog-titlebar-close {
        display: none;
    }

    .ui-dialog-titlebar{
        display: none;
    }

</style>

<h2>Detalle del cobro</h2>

<div>
    <div>
        <table class="table table-bordered border-secondary w-25">
            <tr>
                <td class="bg-secondary bg-opacity-25 "># Cobro</td>
                <td>@this.Model.Cobro.IdCobro</td>
            </tr>
            <tr>
                <td class="bg-secondary bg-opacity-25 ">Propietario</td>
                <td>@this.Model.Cobro.Persona</td>
            </tr>
            <tr>
                <td class="bg-secondary bg-opacity-25 ">Nombre casa</td>
                <td>@this.Model.Cobro.NumCasa</td>
            </tr>
            <tr>
                <td class="bg-secondary bg-opacity-25 ">Monto cobro</td>
                <td>@this.Model.Cobro.monto</td>
            </tr>
            <tr>
                <td class="bg-secondary bg-opacity-25 ">Precio casa</td>
                <td>@this.Model.Cobro.PrecioCasa</td>
            </tr>
            <tr>
                <td class="bg-secondary bg-opacity-25 ">Periodo</td>

                @{
                    var mes = string.Empty;
                    //Carga el mes según el número
                    switch (this.Model.Cobro.mes)
                    {
                        case 1:
                            mes = "Enero";
                            break;
                        case 2:
                            mes = "Febrero";
                            break;
                        case 3:
                            mes = "Marzo";
                            break;
                        case 4:
                            mes = "Abril";
                            break;
                        case 5:
                            mes = "Mayo";
                            break;
                        case 6:
                            mes = "Junio";
                            break;
                        case 7:
                            mes = "Julio";
                            break;
                        case 8:
                            mes = "Agosto";
                            break;
                        case 9:
                            mes = "Septiembre";
                            break;
                        case 10:
                            mes = "Octubre";
                            break;
                        case 11:
                            mes = "Noviembre";
                            break;
                        case 12:
                            mes = "Diciembre";
                            break;
                    }
                }
                <td>@mes - @this.Model.Cobro.anno</td>
            </tr>
            <tr>
                <td class="bg-secondary bg-opacity-25 ">Estado</td>
                <td>@this.Model.Cobro.estado</td>
            </tr>
        </table>
    </div>

    <div class="mb-3">
        <label class="form-label text-secondary" for="Servicios">Servicios</label>

        @{
            var validador = false;

            //Muestra los servicios
            foreach (var servicio in this.Model.Servicios)
            {
                //Solo carga los servicios activos
                if (servicio.Estado)
                {
                    //Valida si se va a modificar o crear
                    if (this.Model.Cobro != null)
                    {
                        foreach (var detalleCobro in this.Model.DetalleCobro)
                        {
                            //Selecciona los servicios asociado al cobro
                            if (detalleCobro.Id_servicio == servicio.Id_servicio)
                            {
                                <div>
                                    <input type="checkbox" id="@servicio.Id_servicio" name="Servicios" value="@servicio.Id_servicio" checked disabled />
                                    <label for="@servicio.Id_servicio">@servicio.NombreCategoria : @servicio.Nombre</label>
                                </div>

                                validador = true;
                            }
                        }

                    }

                    //Carga los todos servicios no seleccionados
                    if (!validador)
                    {
                        <div>
                            <input type="checkbox" id="@servicio.Id_servicio" name="Servicios" value="@servicio.Id_servicio" disabled />
                            <label for="@servicio.Id_servicio">@servicio.NombreCategoria : @servicio.Nombre</label>
                        </div>
                    }

                    validador = false;
                }

            }


}

    </div>

    <div>
        @* Muestra el boton de editar solo si el cobro es pendiente y el usuario es empleado *@
        @if (Session["UserTipo"].Equals("Empleado") && this.Model.Cobro.IdPersona != (int)Session["UserId"] && this.Model.Cobro.estado.Equals("Pendiente"))
        {
            <span>@Html.ActionLink("Editar", "CrearModificarCobro", "Cobro", new { idCobro = this.Model.Cobro.IdCobro }, new { @class = "btn btn-primary" })</span>
        }
        @* Muestra el boton de pagar solo si el cobro es pendiente *@
        @if (this.Model.Cobro.estado.Equals("Pendiente"))
        {
            <input type="button" id="btnPagar" name="btnPagar" class="btn btn-success" value="Pagar" />
        }
        @* Muestra el boton de editar solo si el cobro es pendiente y el usuario es empleado *@
        @if (Session["UserTipo"].Equals("Empleado") && this.Model.Cobro.IdPersona != (int)Session["UserId"] && this.Model.Cobro.estado.Equals("Pendiente"))
        {
            <input type="button" id="btnEliminar" name="btnEliminar" class="btn btn-danger" value="Eliminar" />
        }

        <span>@Html.ActionLink("Regresar", "Index", "Cobro", new { }, new { @class = "btn btn-secundary btn-outline-dark" })</span>
    </div>

    <div class="mt-3">
        <h3>Lista de acciones realizadas</h3>

        <table class="table table-bordered border-dark w-50 text-center">
            <tr class="bg-dark bg-opacity-50  text-light">
                <th>Fecha</th>
                <th>Detalle</th>
                <th>Realizado por</th>
            </tr>

            @foreach (var bitacora in this.Model.Bitacora)
            {
                <tr>
                    <td>@bitacora.Fecha</td>
                    <td>@bitacora.Detalle</td>
                    <td>@bitacora.Usuario</td>
                </tr>
            }

        </table>

    </div>


</div>

<div id="MsgDialogPago" title="Pagar cobro">
    <div class="m-3" >
        <h4>¿Desea realizar el pago del cobro?</h4>
        <div class="mt-4">
            <button id="btnConfirmarPago" class="btn btn-success">Confirmar</button>
            <button id="btnRegresarPago" class="btn btn-light btn-outline-secondary">Cancelar</button>
        </div>
    </div>
    
</div>

<div id="MsgDialogEliminacion" title="Eliminar cobro" >
    <div class="m-3">
        <h4>¿Desea eliminar el cobro?</h4>
        <div class="mt-4">
            <button id="btnConfirmarEliminacion" class="btn btn-danger">Continuar</button>
            <button id="btnRegresarEliminacion" class="btn btn-light btn-outline-secondary">Cancelar</button>
        </div>
    </div>
    
</div>


@section Scripts{
    <script type="text/javascript">

        $(document).ready(function () {

            var idCliente = @((this.Model.Cobro != null) ? this.Model.Cobro.IdPersona : 0);
            var idCobro = @((this.Model.Cobro != null) ? this.Model.Cobro.IdCobro : 0);
            var idUsuario = @((this.Model.Usuario != null) ? this.Model.Usuario.Id : 0);

            //Carga el mensaje emergente de pago
            $("#MsgDialogPago").dialog({
                autoOpen: false,
                modal: true,
                width: 'auto',
                height: 'auto'
            });

            //Carga el mensaje emergente de elimiación
            $("#MsgDialogEliminacion").dialog({
                autoOpen: false,
                modal: true,
                width: 'auto',
                height: 'auto'
                
            });

            //Muestra el mensaje emergente de pago
            $("#btnPagar").on("click", function () {
                $("#MsgDialogPago").dialog("open");
            });

            //Muestra el mensaje emergente de eliminar
            $("#btnEliminar").on("click", function () {
                $("#MsgDialogEliminacion").dialog("open");
            });

            //Cancela el mensaje emergente de pago
            $("#btnRegresarPago").on("click", function () {
                $("#MsgDialogPago").dialog("close");
            });

            //Cancela el mensaje emergente de eliminar
            $("#btnRegresarEliminacion").on("click", function () {
                $("#MsgDialogEliminacion").dialog("close");
            });

            //Confirma el mensaje emergente de pago
            $("#btnConfirmarPago").on("click", function () {
                $.post("/Cobro/PagarCobro", { idCobro: idCobro }, function () {
                    $("#dialog").dialog("close");
                    location.reload();
                });
            });

            //Confirma el mensaje emergente de eliminar
            $("#btnConfirmarEliminacion").on("click", function () {
                $.post("/Cobro/EliminarCobro", { idCobro: idCobro }, function () {
                    $("#dialog").dialog("close");
                    location.reload();
                });
            });


        });
    </script>
}

